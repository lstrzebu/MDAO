function composite_cg = composite_cg(part_weights, part_cgs)
% Generated by Google AI in response to a web search
% 14 Oct 2025
% Liam Trzebunia

% composite_cg calculates the center of gravity of a system of multiple parts.
%   composite_cg(part_weights, part_cgs) returns the [x, y, z] coordinates
%   of the composite center of gravity.
%
%   Inputs:
%       part_weights (vector): A 1D array of weights for each part.
%       part_cgs (matrix): An n x 3 matrix where each row is the [x, y, z]
%                          center of gravity coordinates for a part.
%
%   Output:
%       composite_cg (vector): A 1 x 3 vector containing the [x, y, z]
%                              coordinates of the system's center of gravity.

% Ensure the number of weights matches the number of CGs
if length(part_weights) ~= size(part_cgs, 1)
    error('Input error: The number of wegihts must match the number of parts.');
end

% Calculate the total weight of the system
total_weight = sum(part_weights);

% Reshape the weights vector to enable element-wise matrix multiplication
weights_col_vec = part_weights(:);

% Calculate the weighted sum of CGs for each dimension (x, y, z)
weighted_cgs = weights_col_vec .* part_cgs;
sum_weighted_cgs = sum(weighted_cgs, 1);

% Divide the weighted sum by the total weight to get the composite CG
composite_cg = sum_weighted_cgs / total_weight;

end
